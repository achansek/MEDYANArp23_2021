function frontend_getfillength(varargin)
% This code calculates the filament length distribution from .mat files
% generated by readMEDYANtraj.
%% Input for the function
% varargin{1} - matfileloadpath - path to find .mat files in
% varargin{2} - arptagcell - cell consisting of filename strings that will help the user
% to load .mat files.
% For example: {'Arp0nM','Arp500pM','Arp1nM','Arp5nM','Arp10nM','Arp25nM','Arp50nM'};
%% Outputs
% 1. Generates a .mat file with the filament length probability density
% function (pdfL), cumulative density function (cdfL), and the bin axis.
% 2. Plots the filament length and pdf as a shaded errorbar plot. Please
% download shadedErrorBar function by Rob Campbell from 
% https://www.mathworks.com/matlabcentral/fileexchange/26311-raacampbell-shadederrorbar
% 3. Please download colorSpectrum function by Ingo Hermann from
% https://www.mathworks.com/matlabcentral/fileexchange/57756-colorspectrum
matloadfilepath = varargin{1};
arptagcell=varargin{2};
outmatfilename = 'fillengthCDF.mat';
% variables
cdfmat={};
pdfmat={};
for i = 1:numel(arptagcell)
    % get filename
    matfilename =  arptagcell{i};
    disp(matfilename);
    %calculate filament length statistics
    [Laxis, cdfL,pdfL,~,~] = ...
        getfillengthCDFCap(matloadfilepath, matfilename);
    % stores the density functions from multiple replicate runs at each arp2/3
    % concentration as a matrix. Each row corresponds to density function from
    % a particular run. For example, if the arptagcell is defined as above,
    % A=pdfL{1} would give us the length distribution corresponding to Arp0nM.
    % A(1,:) corresponds to the first replicate run corresponding to Arp0nM,
    % A(2,:) corresponds to the second replicate run corresponding to Arp0nM,
    % and so on...
    cdfmat = [cdfmat; cdfL];
    pdfmat = [pdfmat;pdfL];
    save(outmatfilename ,'Laxis','cdfmat','pdfmat');
    plotfigureandsave();
end
end
%% Plotter function
function plotfigureandsave()
figure1 = figure('units','inch','position',[1,1,8,8],'Color','w');
load('fillengthCDF.mat')
color = colorSpectrum(numel(idmat));
count = 1;
for i=1:numel(pdfmat)
    x = pdfmat{i};
    shadedErrorBar(Laxis./1e3, x, {@mean, @std},'lineProps',{'Color',color(count,:),'LineWidth',2});hold on;
    count = count + 1;
end
set(gca,'FontSize',20);
set(gca,'LineWidth',2);
xlabel('Filament length, f (\mum)');
ylabel('Probability density function');
xlim([0,4])
ylim([0,6e-3])
savefig(fig,'Fillength-pubquality.fig');
print(fig,'Fillength-pubquality','-dpng','-r300')
fclose all;
end